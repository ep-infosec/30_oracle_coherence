<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2000, 2022, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence.ce.tests</groupId>
    <artifactId>coherence-functional-tests</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>helidon-grpc-client</artifactId>
  <name>Coherence Helidon gRPC Client Tests</name>

  <properties>
    <module.name>helidon.grpc.client.testing</module.name>
    <testClassesDirectory>${project.build.outputDirectory}</testClassesDirectory>

    <!-- The add-opens can be removed once Helidon MP gRPC is fixed -->
    <failsafe.modules.argline>
      ${default.failsafe.modules.argline}
      --add-reads com.oracle.coherence.cdi=ALL-UNNAMED
      --add-reads com.oracle.coherence.cdi.server=ALL-UNNAMED
      --add-reads io.helidon.config=ALL-UNNAMED
      --add-reads io.helidon.config=weld.core.impl
      --add-reads io.helidon.microprofile.grpc.server=ALL-UNNAMED
      --add-opens io.helidon.microprofile.grpc.server/io.helidon.microprofile.grpc.server=weld.core.impl
      --add-opens io.helidon.microprofile.grpc.server/io.helidon.microprofile.grpc.server=io.helidon.microprofile.cdi
      --add-opens io.helidon.microprofile.grpc.client/io.helidon.microprofile.grpc.client=weld.core.impl
      --add-opens io.helidon.microprofile.grpc.client/io.helidon.microprofile.grpc.client=io.helidon.microprofile.cdi
      --add-opens io.helidon.config/io.helidon.config=io.helidon.microprofile.cdi
      --add-opens io.helidon.config/io.helidon.config=weld.core.impl
    </failsafe.modules.argline>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-helidon-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-json</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-cdi-server</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-helidon-grpc-proxy</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.interceptor</groupId>
      <artifactId>jakarta.interceptor-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.el</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-testing-support</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish</groupId>
          <artifactId>jakarta.el</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.reactivex.rxjava3</groupId>
      <artifactId>rxjava</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <!--
              We exclude the beans.xml file from the final jar, otherwise
              Weld will find duplicate beans as it will scan both the jar
              and the classes directory
              -->
              <excludes>
                <exclude>**/beans.xml</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- run integration tests *Tests.java and *IT.java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <!-- run integration tests *Test.java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.oracle.coherence.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-module-info</id>
            <phase>package</phase>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <configuration>
              <exclusions>
                <exclusion>
                  <groupId>com.google.code.findbugs</groupId>
                  <artifactId>jsr305</artifactId>
                </exclusion>
              </exclusions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>stage10</id>
      <properties>
        <skipTests>false</skipTests>
      </properties>
    </profile>
  </profiles>
</project>
